// ================
// BATTLEZONE SHELL
// ================

ConfigureVarSys()
{
	CreateString("shell.images.models", "Edflogo.xsi");
}


//
// CREATE SHELL MULTIPLAYER GAME OPTIONS PAGE
//
CreateControl("ShellMultiClientOption", "WINDOW")
{
	Style("TRANSPARENT", "INERT");
	Geom("PARENTWIDTH", "PARENTHEIGHT");

	OnEvent("Control::ActivateSelf")
	{
		cmd("shell.background multip_client.tga BackStarField.tga");
		cmd("shell.invitefriend.hideshowbuttons");
		Activate("|ShellMultiClientDisplay");
	}
	
	
	//CSM invite friends might be open, but it should never be open if this panel is deactivated.
	OnEvent("Control::DeactivateSelf")
	{
		Deactivate("|MultiInviteFriend");
		Deactivate("|ShellMultiClientDisplay");
	}

	//
	//
	// create the "back" button
	//
	CreateControl("Back", "BUTTON")
	{
		ColorGroup("MAGENTA");
		Position(41, 22);
		Size(130, 0);
		BorderSize(10);
		BevelSize(5);
		Style("ROLLOVER", "OUTLINE");
		Text("Main");
		Font("MEDIUM");
		Cursor("Highlight");
		NotifyParent("Button::Press", "Back");
	}

	//
	// create the "leave" button
	//
	CreateControl("Leave", "BUTTON")
	{
		Geom("RIGHT");
		Align("<Back");
		ColorGroup("MAGENTA");
		Position(31, 0);
		Size(130, 0);
		BorderSize(10);
		BevelSize(5);
		Font("SMALL");
		JustifyText("CENTER");
		Text("Leave Game");
		Style("ROLLOVER", "OUTLINE");
		Cursor("Highlight");
		NotifyParent("Button::Press", "Leave");
	}

	//
	// create the "Invite Friend" button
	//
	CreateControl("Invite", "BUTTON")
	{
		Geom("RIGHT");
		Align("<Leave");
		ColorGroup("MAGENTA");
		Position(192, 0);
		Size(130, 0);
		BorderSize(10);
		BevelSize(5);
		Font("SMALL");
		JustifyText("CENTER");
		Text("Invite Friends");
		Style("ROLLOVER", "RIGHTTAB", "OUTLINE");
		Cursor("Highlight");
		NotifyParent("Button::Press", "Invite");
	}
	OnEvent("Invite")
	{
		Cmd("shell.invitefriend.activate");
		FadeIn("|MultiInviteFriend");
	}

	//
	// create the "launch" button
	//
	CreateControl("Launch", "BUTTON")
	{
		Geometry("RIGHT", "TOP");
		ColorGroup("MAGENTA");
		Position(-41, 22);
		Size(130, 0);
		BorderSize(10);
		BevelSize(5);
		Font("MEDIUM");
		JustifyText("CENTER");
		Text("ENTER GAME");
		Style("ROLLOVER", "OUTLINE", "BLINK");
		Cursor("Highlight");
		NotifyParent("Button::Press", "Launch");
	}

	// handle the launch event
	OnEvent("Launch")
	{
		cmd("shell.stopSound mire22_4.wav");
		Cmd("shell.multi.launch");
		Cmd("network.launch");
	}


	OnEvent("Leave")
	{
		Cmd("network.session.leave");
		// FadeIn/Outs done from NetCommands::DoIfaceLeaveSession() now
	}

	//
	// handle the "back" event
	//
	OnEvent("Back")
	{
		cmd("shell.stopSound mire22_4.wav");
		Cmd("network.session.leave");
		Cmd("network.setoff");
		// FadeIn/Outs done from NetCommands::DoIfaceQuitToMainMenu() now
	}

	//
	// create the options window
	//
	CreateControl("Option", "WINDOW")
	{
		ColorGroup("MAGENTA");

		Geometry("RIGHT", "BOTTOM");
		Position(-20, -20); //230);
		//Size(380, 5);
		Size(380, 230);
		BorderSize(10);
		BevelSize(10);
		TabSize(180, 10);
		Title("Game Info");
		TitleFont("SMALL");
		Style("RIGHTTAB", "INERT", "OUTLINE");

		CreateControl("GameOptions", "BUTTON")
		{
			ColorGroup("BLACKBLUE");
			Geometry("LEFT", "TOP");
			Position(3, 0);
			Size(160, 9);
			BorderSize(3);
			BevelSize(3);
			Style("ROLLOVER", "OUTLINE");
			Cursor("Highlight");
			Font("SMALL");
			Text("Game Options");
			NotifyParent("Button::Press", "DoGameOpts");
		}

		OnEvent("DoGameOpts")
		{
			Deactivate("|ShellMultiTeam");
			Deactivate("|ShellMultiClientDisplay");
			Cmd("network.session.opengameopts");
		}

		CreateControl("ExtraOptions", "BUTTON")
		{
			ColorGroup("BLACKBLUE");
			Geometry("RIGHT", "TOP");
			Position(-3, 0);
			Size(160, 9);
			BorderSize(3);
			BevelSize(3);
			Style("ROLLOVER", "OUTLINE");
			Cursor("Highlight");
			Font("SMALL");
			Text("Map Options");
			NotifyParent("Button::Press", "DoExtra");
		}

		OnEvent("DoExtra")
		{
			Deactivate("|ShellMultiTeam");
			Deactivate("|ShellMultiClientDisplay");
			Cmd("network.session.openextras");
		}
	}

	//
	// create the teams window
	//
	CreateControl("Players", "WINDOW")
	{
		ColorGroup("MAGENTA");
		Geometry("RIGHT", "BOTTOM");
		Position(-20, -20);
		Size(380, 188);
		BorderSize(10);
		BevelSize(10);
		//TabSize(180, 10);
		//Title("Player List");
		//TitleFont("MEDIUM");
		//Style("RIGHTTAB", "OUTLINE");
		Style("TRANSPARENT", "INERT");

		CreateControl("PlayerListTitle", "STATIC")
		{
			//Geometry("RIGHT");
			Position(0, -20);
			Size(180, 10);
			Font("MEDIUM");
			Text("Player List");
			JustifyText("CENTER");
			Style("TRANSPARENT");
		}

		CreateControl("PlayerList", "LISTBOX")
		{
			ColorGroup("BLACKBLUE");

			Geometry("LEFT", "TOP");
			Position(0, 0);
			Size(380, 108);
			CellSize(370, 12);
			BorderSize(5);
			BevelSize(5);
			Font("TINY");
			Cursor("Highlight");
			Style("VSLIDER", "DisableRightClick");
			UseVar("network.session.playerlist");
		}

		CreateControl("VoiceChatTitle", "STATIC")
		{
			Geometry("LEFT", "BOTTOM");
			Position(0, -17);
			Size(50, 10);
			Font("TINY");
			Text("Voice Chat:");
			JustifyText("LEFT");
			Style("TRANSPARENT");
		}

		CreateControl("VoiceChatAll", "BUTTON")
		{
			ColorGroup("MAGENTA");

			Geometry("LEFT", "BOTTOM");
			Position(70, -17);
			Size(50, 10);
			BorderSize(3);
			BevelSize(2);
			Style("ROLLOVER", "RADIO", "OUTLINE");
			Cursor("Highlight");
			Font("TINY");
			Text("All");
			UseVar("network.session.voicechattype");
			Value(0);
		}

		CreateControl("VoiceChatOne", "BUTTON")
		{
			ColorGroup("MAGENTA");

			Geometry("RIGHT", "VINTERNAL");
			Align("<VoiceChatAll");
			Position(10, 0);
			Size(50, 10);
			BorderSize(3);
			BevelSize(2);
			Style("ROLLOVER", "RADIO", "OUTLINE");
			Cursor("Highlight");
			Font("TINY");
			Text("One");
			UseVar("network.session.voicechattype");
			Value(2);
		}

		CreateControl("Mute", "BUTTON")
		{
			ColorGroup("MAGENTA");
			Geometry("RIGHT", "VINTERNAL");
			Align("<VoiceChatOne");
			Position(70, 0);
			Size(60, 10);
			BorderSize(3);
			BevelSize(2);
			Style("ROLLOVER", "OUTLINE");
			Cursor("Highlight");
			Font("Tiny");
			Text("Mute");
			NotifyParent("Button::Press", "Mute");
		}
		OnEvent("Mute")
		{
			Cmd("network.session.guimute");
		}
		
		CreateControl("UnMute", "BUTTON")
		{
			ColorGroup("MAGENTA");
			Geometry("RIGHT", "VINTERNAL");
			Align("<Mute");
			Position(10, 0);
			Size(60, 10);
			BorderSize(3);
			BevelSize(2);
			Style("ROLLOVER", "OUTLINE");
			Cursor("Highlight");
			Font("Tiny");
			Text("UnMute");
			NotifyParent("Button::Press", "UnMute");
		}
		OnEvent("UnMute")
		{
			Cmd("network.session.guiunmute");
		}

		CreateControl("ChatTitle", "STATIC")
		{
			Geometry("LEFT", "BOTTOM");
			Position(0, 2);
			Size(50, 10);
			Font("TINY");
			Text("Text Chat:");
			JustifyText("LEFT");
			Style("TRANSPARENT");
		}

		CreateControl("ChatAll", "BUTTON")
		{
			ColorGroup("MAGENTA");

			Geometry("LEFT", "BOTTOM");
			Position(70, 2);
			Size(50, 10);
			BorderSize(3);
			BevelSize(2);
			Style("ROLLOVER", "RADIO", "OUTLINE");
			Cursor("Highlight");
			Font("TINY");
			Text("All");
			UseVar("network.session.chattype");
			Value(0);
		}

		CreateControl("ChatOne", "BUTTON")
		{
			ColorGroup("MAGENTA");

			Geometry("RIGHT", "VINTERNAL");
			Align("<ChatAll");
			Position(10, 0);
			Size(50, 10);
			BorderSize(3);
			BevelSize(2);
			Style("ROLLOVER", "RADIO", "OUTLINE");
			Cursor("Highlight");
			Font("TINY");
			Text("One");
			UseVar("network.session.chattype");
			Value(2);
		}

		CreateControl("Ignore", "BUTTON")
		{
			ColorGroup("MAGENTA");
			Geometry("RIGHT", "VINTERNAL");
			Align("<ChatOne");
			Position(70, 0);
			Size(60, 10);
			BorderSize(3);
			BevelSize(2);
			Style("ROLLOVER", "OUTLINE");
			Cursor("Highlight");
			Font("Tiny");
			Text("Ignore");
			NotifyParent("Button::Press", "Ignore");
		}
		OnEvent("Ignore")
		{
			Cmd("network.session.guiignore");
		}
		
		CreateControl("UnIgnore", "BUTTON")
		{
			ColorGroup("MAGENTA");
			Geometry("RIGHT", "VINTERNAL");
			Align("<Ignore");
			Position(10, 0);
			Size(60, 10);
			BorderSize(3);
			BevelSize(2);
			Style("ROLLOVER", "OUTLINE");
			Cursor("Highlight");
			Font("Tiny");
			Text("UnIgnore");
			NotifyParent("Button::Press", "UnIgnore");
		}
		OnEvent("UnIgnore")
		{
			Cmd("network.session.guiunignore");
		}

		CreateControl("ShowMute", "BUTTON")
		{
			ColorGroup("MAGENTA");
			Geometry("RIGHT", "TOP");
			Position(0, 140);
			Size(90, 10);
			BorderSize(3);
			BevelSize(2);
			Style("ROLLOVER", "OUTLINE");
			Cursor("Highlight");
			Font("Tiny");
			Text("Show Muted");
			NotifyParent("Button::Press", "ShowMute");
		}
		OnEvent("ShowMute")
		{
			Cmd("network.chateditline '/showMute';network.chatline.entered");
		}

		CreateControl("ShowIgnore", "BUTTON")
		{
			ColorGroup("MAGENTA");
			Geometry("LEFT", "VINTERNAL");
			Align("<ShowMute");
			Position(-10, 0);
			Size(90, 10);
			BorderSize(3);
			BevelSize(2);
			Style("ROLLOVER", "OUTLINE");
			Cursor("Highlight");
			Font("Tiny");
			Text("Show Ignored");
			NotifyParent("Button::Press", "ShowIgnore");
		}
		OnEvent("ShowIgnore")
		{
			Cmd("network.chateditline '/showignore';network.chatline.entered");
		}
		
		CreateControl("Ban", "BUTTON")
		{
			ColorGroup("MAGENTA");
			Geometry("RIGHT", "TOP");
			Position(-70, 120);
			Size(60, 10);
			BorderSize(3);
			BevelSize(2);
			Style("ROLLOVER", "OUTLINE");
			Cursor("Highlight");
			Font("Tiny");
			Text("Ban");
			NotifyParent("Button::Press", "Ban");
		}
		OnEvent("Ban")
		{
			Cmd("network.session.guiban");
		}

		// Below buttons were functional, but commented out. Enabled for alignment, can keep?
//		CreateControl("List", "BUTTON")
//		{
//			ColorGroup("MAGENTA");
//			Geometry("LEFT", "TOP");
//			Position(105, 120);
//			Size(75, 10);
//			BorderSize(3);
//			BevelSize(2);
//			Style("ROLLOVER", "OUTLINE");
//			Cursor("Highlight");
//			Font("Tiny");
//			Text("List Players");
//			NotifyParent("Button::Press", "List");
//		}
//		OnEvent("List")
//		{
//			Cmd("network.chateditline '/list';network.chatline.entered");
//		}
//		
//		CreateControl("PingList", "BUTTON")
//		{
//			ColorGroup("MAGENTA");
//			Geometry("Left", "TOP");
//			Position(5, 140);
//			Size(55, 10);
//			BorderSize(3);
//			BevelSize(2);
//			Style("ROLLOVER", "OUTLINE");
//			Cursor("Highlight");
//			Font("Tiny");
//			Text("Ping List");
//			NotifyParent("Button::Press", "PingList");
//		}
//		OnEvent("PingList")
//		{
//			Cmd("network.chateditline '/pinglist';network.chatline.entered");
//		}
//		
//		CreateControl("IPList", "BUTTON")
//		{
//			ColorGroup("MAGENTA");
//			Geometry("RIGHT", "VINTERNAL");
//			Align("<PingList");
//			Position(10, 0);
//			Size(50, 10);
//			BorderSize(3);
//			BevelSize(2);
//			Style("ROLLOVER", "OUTLINE");
//			Cursor("Highlight");
//			Font("Tiny");
//			Text("IP List");
//			 NotifyParent("Button::Press", "IPList");
//		}
//		OnEvent("IPList")
//		{
//			Cmd("network.chateditline '/iplist';network.chatline.entered");
//		}
//		
//		CreateControl("IP", "BUTTON")
//		{
//			ColorGroup("MAGENTA");
//			Geometry("RIGHT", "VINTERNAL");
//			Align("<IPList");
//			Position(10, 0);
//			Size(50, 10);
//			BorderSize(3);
//			BevelSize(2);
//			Style("ROLLOVER", "OUTLINE");
//			Cursor("Highlight");
//			Font("Tiny");
//			Text("Show IP");
//			NotifyParent("Button::Press", "IP");
//		}
//		OnEvent("IP")
//		{
//			Cmd("network.chateditline '/ip';network.chatline.entered");
//		}
	}
}


///this section shows the map information and has the button to go back to vehicle info
//it is paired with the control below, named poorly as MapButt_Small
//CSM

CreateControl("MapInfo_Small", "WINDOW")
{
	Style("TRANSPARENT", "INERT");
	Geom("PARENTWIDTH", "PARENTHEIGHT");

	CreateControl("Map", "WINDOW")
	{
		ColorGroup("MAGENTA");

		Geometry("LEFT", "TOP");
		Position(20, 70);
		Size(400, 120);
		BorderSize(10);
		BevelSize(10);
		TabSize(160, 10);
		Title("Map Info");
		TitleFont("SMALL");
		Style("OUTLINE");

		CreateControl("Map", "STATIC")
		{
			ColorGroup("WHITE");
			Geometry("LEFT", "TOP");
			Position(10, -5);
			Size(128, 128);
		}

		CreateControl("MapSpecs", "LISTBOX")
  		{
  			ColorGroup("LISTBOX");
  			Geometry("TOP", "RIGHT");
  			Position(-10, 0);
  			Size(200, 120);
  			CellSize(190, 12);
  			BorderSize(5);
  			BevelSize(5);
			Style("INERT", "VSLIDER");
  			Font("TINY");
  		}

		OnEvent("FillData")
		{
			Cmd("shell.multi.missionInfo");
		}
	}

	
	//
	// create the "VehicleSelect" button
	//
	CreateControl("VehicleSelect", "BUTTON")
	{
		Geometry("LEFT", "TOP");
		ColorGroup("MAGENTA");
		Position(363, 22);
		Size(130, 0);
		BorderSize(10);
		BevelSize(5);
		Font("SMALL");
		JustifyText("CENTER");
		Text("My Vehicle");
		Style("ROLLOVER", "RIGHTTAB", "OUTLINE");
		Cursor("Highlight");
		NotifyParent("Button::Press", "vehSel");
	}
	
	//
	// handle the vehicle selection event
	//
	OnEvent("vehSel")
	{
		FadeOut("|MapInfo_Small");
		FadeIn("|MapButt_Small");
		FadeIn("|ShellMultiVehicle_Small");
	}
}


CreateControl("MapInfo", "WINDOW")
{
	Style("TRANSPARENT", "INERT");
	Geom("PARENTWIDTH", "PARENTHEIGHT");

	CreateControl("Map", "WINDOW")
	{
		ColorGroup("MAGENTA");

		Geometry("LEFT", "TOP");
		Position(20, 70);
		Size(560, 120);
		BorderSize(10);
		BevelSize(10);
		TabSize(160, 10);
		Title("Map Info");
		TitleFont("SMALL");
		Style("OUTLINE");

		CreateControl("MapList", "STATIC")
		{
			ColorGroup("LISTBOX");

			Geometry("TOP", "LEFT");
			Position(0, 0);
			Size(200, 25);
			BorderSize(5);
			BevelSize(3);
			Font("TINY");
			//UseVar("network.session.svar0");
		}

		CreateControl("Map", "STATIC")
		{
			ColorGroup("WHITE");
			Geometry("RIGHT", "VINTERNAL");
			Align("<MapList");
			Position(15, -5);
			Size(128, 128);
		}

		CreateControl("MapSpecs", "LISTBOX")
  		{
  			ColorGroup("LISTBOX");
  			Geometry("TOP", "RIGHT");
  			Position(0, 0);
  			Size(200, 120);
  			CellSize(190, 12);
  			BorderSize(5);
  			BevelSize(5);
			Style("INERT", "VSLIDER");
  			Font("TINY");
  		}

		OnEvent("FillData")
		{
			Cmd("shell.multi.missionInfo");
		}
	}

	
	//
	// create the "VehicleSelect" button
	//
	CreateControl("VehicleSelect", "BUTTON")
	{
		Geometry("LEFT", "TOP");
		ColorGroup("MAGENTA");
		Position(363, 22);
		Size(130, 0);
		BorderSize(10);
		BevelSize(5);
		Font("SMALL");
		JustifyText("CENTER");
		Text("Choose Vehicle");
		Style("ROLLOVER", "RIGHTTAB", "OUTLINE");
		Cursor("Highlight");
		NotifyParent("Button::Press", "vehSel");
	}
	
	//
	// handle the vehicle selection event
	//
	OnEvent("vehSel")
	{
		FadeOut("|MapInfo");
		FadeIn("|MapButt");
		FadeIn("|ShellMultiVehicle");
	}
}



///this section shows the vehicle information and has the button to go back to map info
//it is named poorly, it should be VechButt_Small probably
//CSM

CreateControl("MapButt_Small", "WINDOW")
{
	Style("TRANSPARENT", "INERT");
	Geom("PARENTWIDTH", "PARENTHEIGHT");

	//
	// create the "MapButt" button
	//
	CreateControl("MapButton", "BUTTON")
	{
		Geometry("LEFT", "TOP");
		ColorGroup("MAGENTA");
		Position(363, 22);
		Size(130, 0);
		BorderSize(10);
		BevelSize(5);
		Font("SMALL");
		JustifyText("CENTER");
		Text("Map Info");
		Style("ROLLOVER", "RIGHTTAB", "OUTLINE");
		Cursor("Highlight");
		NotifyParent("Button::Press", "mapSel");
	}
	
	//
	// handle the vehicle selection event
	//
	OnEvent("mapSel")
	{
		FadeOut("|MapButt_Small");
		FadeOut("|ShellMultiVehicle_Small");
		FadeIn("|MapInfo_Small");
	}
}

CreateControl("MapButt", "WINDOW")
{
	Style("TRANSPARENT", "INERT");
	Geom("PARENTWIDTH", "PARENTHEIGHT");

	//
	// create the "MapButt" button
	//
	CreateControl("MapButton", "BUTTON")
	{
		Geometry("LEFT", "TOP");
		ColorGroup("MAGENTA");
		Position(363, 22);
		Size(130, 0);
		BorderSize(10);
		BevelSize(5);
		Font("SMALL");
		JustifyText("CENTER");
		Text("Map Info");
		Style("ROLLOVER", "RIGHTTAB", "OUTLINE");
		Cursor("Highlight");
		NotifyParent("Button::Press", "mapSel");
	}
	
	//
	// handle the vehicle selection event
	//
	OnEvent("mapSel")
	{
		FadeOut("|MapButt");
		FadeOut("|ShellMultiVehicle");
		FadeIn("|MapInfo");
	}
}

CreateControl("ShellMultiClientDisplay", "WINDOW")
{
	Style("TRANSPARENT", "INERT");
	Geom("PARENTWIDTH", "PARENTHEIGHT");

	OnEvent("Control::ActivateSelf")
	{
		Activate("|ShellMultiClientDisplayTimer1");
	}
	OnEvent("Control::DeactivateSelf")
	{
		Deactivate("|ShellMultiClientDisplayTimer1");
		Deactivate("|ShellMultiClientDisplayTimer2");
		Deactivate("|ShellMultiClientDisplayTimer3");
	}

	CreateControl("DisplayWindow", "WINDOW")
	{
		ColorGroup("MAGENTA");

		Geometry("RIGHT", "TOP");
		Position(-20, 70);
		Size(220, 120);
		BorderSize(10);
		BevelSize(10);
		TabSize(150, 10);
		Title("Viewer");
		TitleFont("SMALL");
		Style("RIGHTTAB", "OUTLINE");

		CreateControl("XSIView1", "VIEWER")
		{
			Geom("LEFT", "TOP");
			ColorGroup("LISTBOX");
			Position(0, 0);
			Size(220, 120);
			BorderSize(5);
			BevelSize(5);

			//SetModelName("Edflogo.xsi");
			UseVar("shell.images.models");
	
			SetAmbientColor(1.0, 1.0, 1.0);
			SetDiffuseColor(1.0, 1.0, 1.0);
			SetDiffuseDir(2.0, -5.0, 1.0);
			SetModelDistance(300.0);
			SetModelInclination(0.0);
			SetModelRotation(60.0);
		}
	}
}

CreateControl("ShellMultiClientDisplayTimer1", "WINDOW")
{
	Style("TRANSPARENT", "INERT");
	Geom("PARENTWIDTH", "PARENTHEIGHT");

	CreateControl("XSITimer1", "TIMER")
	{
		PollInterval(30000);
		NotifyParent("Timer::Timeout", "Timeout1");
	}
	OnEvent("Timeout1")
	{
		Deactivate("|ShellMultiClientDisplayTimer1");
		Activate("|ShellMultiClientDisplayTimer2");
		Cmd("shell.images.models ivscout00.fbx");
	}
}

CreateControl("ShellMultiClientDisplayTimer2", "WINDOW")
{
	Style("TRANSPARENT", "INERT");
	Geom("PARENTWIDTH", "PARENTHEIGHT");

	CreateControl("XSITimer2", "TIMER")
	{
		PollInterval(30000);
		NotifyParent("Timer::Timeout", "Timeout2");
	}
	OnEvent("Timeout2")
	{
		Deactivate("|ShellMultiClientDisplayTimer2");
		Activate("|ShellMultiClientDisplayTimer3");
		Cmd("shell.images.models ivtank00.fbx");
	}
}

CreateControl("ShellMultiClientDisplayTimer3", "WINDOW")
{
	Style("TRANSPARENT", "INERT");
	Geom("PARENTWIDTH", "PARENTHEIGHT");

	CreateControl("XSITimer3", "TIMER")
	{
		PollInterval(30000);
		NotifyParent("Timer::Timeout", "Timeout3");
	}
	OnEvent("Timeout3")
	{
		Deactivate("|ShellMultiClientDisplayTimer3");
		Activate("|ShellMultiClientDisplayTimer1");
		Cmd("shell.images.models Edflogo.xsi");
	}
}
